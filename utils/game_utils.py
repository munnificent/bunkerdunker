# utils/game_utils.py

import random
import string
import logging
from typing import Dict, Any, List, Type
from sqlalchemy.orm import Session
from sqlalchemy.sql import func

from models import (
    Player, Characteristic, Location, Room,
    Profession, Biology, Health, Hobby, Luggage, Fact,
    Phobia, Talent, SocialStatus, Base
)

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---

RANDOM_EVENTS: List[str] = [
    "üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏ –≤ –±—É–Ω–∫–µ—Ä–µ! –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–ø–æ—Å–æ–± –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∏—Ç–∞–Ω–∏–µ.",
    "üíß –ó–∞–ø–∞—Å—ã –≤–æ–¥—ã –Ω–∞—á–∏–Ω–∞—é—Ç –∏—Å—Ç–æ—â–∞—Ç—å—Å—è. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ.",
    "üì° –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–ª–∞–±—ã–π —Å–∏–≥–Ω–∞–ª –∏–∑–≤–Ω–µ. –ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤—è–∑—å.",
    "üõ† –ù–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ –∂–∏–∑–Ω–µ–æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è. –ù—É–∂–µ–Ω —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –¥–ª—è —Ä–µ–º–æ–Ω—Ç–∞.",
    "üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –±—É–Ω–∫–µ—Ä–µ —Ä–µ–∑–∫–æ —É–ø–∞–ª–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥—Ä–µ—Ç—å—Å—è –∏ –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—É.",
    "üï≥ –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–∫—Ä—ã—Ç—ã–π –ø—Ä–æ—Ö–æ–¥ –≤ —Å—Ç–µ–Ω–µ. –†–µ—à–∏—Ç–µ, –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –ª–∏ –µ–≥–æ.",
    "üçΩ –ó–∞–ø–∞—Å—ã –ø–∏—â–∏ –∏—Å–ø–æ—Ä—Ç–∏–ª–∏—Å—å. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–∏—Ç–∞–Ω–∏—è.",
    "üì¶ –ù–∞–π–¥–µ–Ω —è—â–∏–∫ —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º. –û—Ç–∫—Ä–æ–µ—Ç–µ –ª–∏ –≤—ã –µ–≥–æ?",
    "üêç –í –±—É–Ω–∫–µ—Ä–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∑–º–µ–∏! –ù—É–∂–Ω–æ –∏—Ö –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å.",
    "üîí –°—Ä–∞–±–æ—Ç–∞–ª–∞ —Å–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –±–ª–æ–∫–∏—Ä—É—è –¥–æ—Å—Ç—É–ø –∫ –≤–∞–∂–Ω—ã–º —Ä–µ—Å—É—Ä—Å–∞–º.",
    "üìª –ü–æ–π–º–∞–ª–∏ —Å—Ç—Ä–∞–Ω–Ω–æ–µ —Ä–∞–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ. –†–∞—Å—à–∏—Ñ—Ä—É–π—Ç–µ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ.",
    "üå± –í –≥–∏–¥—Ä–æ–ø–æ–Ω–Ω–æ–π —Ñ–µ—Ä–º–µ –≤—ã—Ä–æ—Å–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è.",
    "üßü –ü–æ—è–≤–∏–ª–∏—Å—å –ø—Ä–∏–∑–Ω–∞–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–Ω–∞—Ä—É–∂–∏ –±—É–Ω–∫–µ—Ä–∞. –í—ã—è—Å–Ω–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç.",
    "üó∫ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –∫–∞—Ä—Ç–∞ —Å –æ—Ç–º–µ—á–µ–Ω–Ω—ã–º —Ç–∞–π–Ω–∏–∫–æ–º. –û—Ç–ø—Ä–∞–≤–∏—Ç–µ—Å—å –ª–∏ –≤—ã –∑–∞ –Ω–∏–º?",
]

RANDOM_ENDINGS: List[str] = [
    "üåÖ –í—ã–∂–∏–≤—à–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±—É—Å—Ç—Ä–æ–∏–ª–∏ –Ω–æ–≤–æ–µ –æ–±—â–µ—Å—Ç–≤–æ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏—é.",
    "üõ∞Ô∏è –í—ã–∂–∏–≤—à–∏–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ —Å–∏–≥–Ω–∞–ª—ã —Å –¥—Ä—É–≥–æ–≥–æ –º–∏—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –∫–æ—Å–º–æ—Å –Ω–∞ –ø–æ–∏—Å–∫–∏ –Ω–æ–≤–æ–π –ø–ª–∞–Ω–µ—Ç—ã.",
    "üåã –ë—É–Ω–∫–µ—Ä –æ–∫–∞–∑–∞–ª—Å—è –Ω–∞ –≥—Ä–∞–Ω–∏ –≤—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–≤–µ—Ä–∂–µ–Ω–∏—è, –∏ –≤—ã–∂–∏–≤—à–∏–µ —á—É–¥–æ–º —Å–ø–∞—Å–ª–∏—Å—å.",
    "üëΩ –í—ã–∂–∏–≤—à–∏–µ —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π —Ñ–æ—Ä–º–æ–π –∂–∏–∑–Ω–∏, –∏ –∏—Ö –¥–∞–ª—å–Ω–µ–π—à–∞—è —Å—É–¥—å–±–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞.",
    "üåä –ü–æ–¥–Ω—è–≤—à–∏–π—Å—è —É—Ä–æ–≤–µ–Ω—å –æ–∫–µ–∞–Ω–∞ –∑–∞—Ç–æ–ø–∏–ª –±—É–Ω–∫–µ—Ä, –Ω–æ –≤—ã–∂–∏–≤—à–∏–µ —É—Å–ø–µ–ª–∏ –ø–æ–∫–∏–Ω—É—Ç—å –µ–≥–æ –Ω–∞ –ø–æ–¥–≤–æ–¥–Ω–æ–π –ª–æ–¥–∫–µ.",
    "üß¨ –í—ã–∂–∏–≤—à–∏–µ –Ω–∞—à–ª–∏ —Å–ø–æ—Å–æ–± –æ–±—Ä–∞—Ç–∏—Ç—å –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—É –∏ –≤–µ—Ä–Ω—É—Ç—å –º–∏—Ä –∫ –ø—Ä–µ–∂–Ω–µ–π –∂–∏–∑–Ω–∏."
]

# --- –§—É–Ω–∫—Ü–∏–∏ ---

def generate_unique_room_code(session: Session, max_attempts: int = 10) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã.
    
    Args:
        session: –ê–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è SQLAlchemy.
        max_attempts: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.

    Returns:
        –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã.
    
    Raises:
        RuntimeError: –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –∑–∞ max_attempts.
    """
    for _ in range(max_attempts):
        code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))
        existing_room = session.query(Room).filter_by(code=code).first()
        if not existing_room:
            return code
    raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

def _get_random_record(session: Session, model: Type[Base]) -> Any:
    """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã-—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞."""
    return session.query(model).order_by(func.random()).first()

def assign_new_characteristics_to_player(session: Session, player: Player) -> Characteristic:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –∏–≥—Ä–æ–∫—É –Ω–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.
    –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏.

    Args:
        session: –ê–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è SQLAlchemy.
        player: –û–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏—Å–≤–∞–∏–≤–∞—é—Ç—Å—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.

    Returns:
        –û–±—ä–µ–∫—Ç Characteristic —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
    """
    # 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ –æ–¥–Ω—É —Å–µ—Å—Å–∏—é
    profession_obj = _get_random_record(session, Profession)
    biology_obj = _get_random_record(session, Biology)
    health_obj = _get_random_record(session, Health)
    hobby_obj = _get_random_record(session, Hobby)
    luggage_obj = _get_random_record(session, Luggage)
    fact_obj = _get_random_record(session, Fact)
    phobia_obj = _get_random_record(session, Phobia)
    talent_obj = _get_random_record(session, Talent)
    social_status_obj = _get_random_record(session, SocialStatus)

    # 2. –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏, –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞—è —Å–ª—É—á–∞–∏, –µ—Å–ª–∏ –∫–∞–∫–∞—è-—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
    char_data = {
        'profession': profession_obj.name if profession_obj else "–ë–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π",
        'biology': f"{biology_obj.gender}, {biology_obj.age} –ª–µ—Ç, {biology_obj.body_features}" if biology_obj else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
        'health': health_obj.condition if health_obj else "–ó–¥–æ—Ä–æ–≤",
        'hobby': hobby_obj.hobby if hobby_obj else "–ù–µ—Ç —Ö–æ–±–±–∏",
        'luggage': luggage_obj.item if luggage_obj else "–ü—É—Å—Ç–æ",
        'facts': fact_obj.fact if fact_obj else "–ù–µ—Ç —Ñ–∞–∫—Ç–æ–≤",
        'phobia': phobia_obj.phobia if phobia_obj else "–ù–µ—Ç —Ñ–æ–±–∏–π",
        'talent': talent_obj.talent if talent_obj else "–ù–µ—Ç —Ç–∞–ª–∞–Ω—Ç–æ–≤",
        'social_status': social_status_obj.status if social_status_obj else "–°—Ä–µ–¥–Ω–∏–π –∫–ª–∞—Å—Å",
    }

    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∏–≥—Ä–æ–∫–∞ —É–∂–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∏—Ö
    characteristics = session.query(Characteristic).filter_by(player_id=player.id).first()
    
    if characteristics:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ
        for key, value in char_data.items():
            setattr(characteristics, key, value)
        logging.info(f"–û–±–Ω–æ–≤–ª–µ–Ω—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–∞ {player.username} ({player.id}).")
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
        characteristics = Characteristic(player_id=player.id, **char_data)
        session.add(characteristics)
        logging.info(f"–°–æ–∑–¥–∞–Ω—ã –Ω–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–∞ {player.username} ({player.id}).")
        
    # –ö–æ–º–º–∏—Ç –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ –≤—ã–∑—ã–≤–∞—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ (–≤ —Ö–µ–Ω–¥–ª–µ—Ä–µ)
    return characteristics

def get_random_location(session: Session) -> Location | None:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –ª–æ–∫–∞—Ü–∏—é (–∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—É) –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    return _get_random_record(session, Location)

def get_random_event() -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–≥—Ä–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –∏–∑ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞."""
    return random.choice(RANDOM_EVENTS)

def get_random_ending() -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–æ–Ω—Ü–æ–≤–∫—É –∏–≥—Ä—ã –∏–∑ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞."""
    return random.choice(RANDOM_ENDINGS)