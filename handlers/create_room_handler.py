# handlers/create_room_handler.py

import logging
from functools import wraps

from sqlalchemy.orm import Session
from telebot import TeleBot
from telebot.types import Message

from config import DEFAULT_MAX_PLAYERS, DEFAULT_SURVIVORS
from database import Session as DbSession
from models import Player, Room
from utils.game_utils import generate_unique_room_code

# --- –î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã ---

def player_required(func):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–µ–π –ë–î.
    - –ù–∞—Ö–æ–¥–∏—Ç –∏–≥—Ä–æ–∫–∞ –ø–æ telegram_id –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–≥–æ.
    - –ü–µ—Ä–µ–¥–∞–µ—Ç –≤ —Ñ—É–Ω–∫—Ü–∏—é bot, message, session –∏ player.
    - –£–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º —Å–µ—Å—Å–∏–∏.
    """
    @wraps(func)
    def wrapper(bot: TeleBot, message: Message, *args, **kwargs):
        session = DbSession()
        try:
            telegram_id = message.from_user.id
            username = message.from_user.username or message.from_user.first_name

            player = session.query(Player).filter_by(telegram_id=telegram_id).first()
            if not player:
                player = Player(telegram_id=telegram_id, username=username)
                session.add(player)
                session.commit() # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–≥—Ä–æ–∫–∞ —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ ID
                logging.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∏–≥—Ä–æ–∫: {username} ({telegram_id}).")

            # –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            result = func(bot, message, session, player, *args, **kwargs)
            session.commit()
            return result

        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ '{func.__name__}': {e}", exc_info=True)
            session.rollback()
            bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
        finally:
            session.close()

    return wrapper

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã ---

@player_required
def handle_create_room(bot: TeleBot, message: Message, session: Session, player: Player):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /create_room.
    –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∏–≥—Ä–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É –∏ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã —Ö–æ—Å—Ç–æ–º.
    """
    logging.info(f"–ò–≥—Ä–æ–∫ {player.username} ({player.id}) —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É.")

    if player.current_room_id:
        bot.send_message(message.chat.id, "‚ùó –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ–º–Ω–∞—Ç–µ. –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∏–Ω—å—Ç–µ –µ–µ —Å –ø–æ–º–æ—â—å—é /leave_room.")
        return

    # –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏, —É–ø—Ä–∞–≤–ª—è–µ–º–æ–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º
    room_code = generate_unique_room_code(session)

    new_room = Room(
        code=room_code,
        host=player,
        max_players=DEFAULT_MAX_PLAYERS,
        survivors=DEFAULT_SURVIVORS
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–º–Ω–∞—Ç—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å—Ç–∞—Ç—É—Å
    new_room.players.append(player)
    player.current_room_id = new_room.id # SQLAlchemy —Å–≤—è–∂–µ—Ç —ç—Ç–æ –ø–æ—Å–ª–µ –∫–æ–º–º–∏—Ç–∞

    session.add(new_room)
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π commit –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–µ

    bot.send_message(
        message.chat.id,
        f"üö™ –ö–æ–º–Ω–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n\n"
        f"<b>–ö–æ–¥ –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:</b> <code>{room_code}</code>\n\n"
        f"–í—ã ‚Äî —Ö–æ—Å—Ç —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã. –ö–æ–≥–¥–∞ –≤—Å–µ —Å–æ–±–µ—Ä—É—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start_game –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã.",
        parse_mode='HTML'
    )