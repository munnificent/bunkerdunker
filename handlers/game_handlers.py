# handlers/game_handlers.py

import logging
from functools import wraps
from typing import List

from sqlalchemy.orm import Session, joinedload
from telebot import TeleBot
from telebot.types import Message, APIError

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
from handlers.create_room_handler import player_required
from handlers.chat_handlers import player_in_room_required, _broadcast_to_room
from models import Player, Room, Characteristic, PlayerAchievement


# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

def _get_player_characteristics_text(player: Player) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –∏–≥—Ä–æ–∫–∞."""
    characteristics = player.characteristics
    if not characteristics:
        return "‚ùó –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫. –ò—Ö –≤—ã–¥–∞–¥—É—Ç –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã."

    return (
        f"<b>–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</b>\n\n"
        f"üë§ <b>–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:</b> {characteristics.profession}\n"
        f"üß¨ <b>–ë–∏–æ–ª–æ–≥–∏—è:</b> {characteristics.biology}\n"
        f"‚ù§Ô∏è <b>–ó–¥–æ—Ä–æ–≤—å–µ:</b> {characteristics.health}\n"
        f"üé® <b>–•–æ–±–±–∏:</b> {characteristics.hobby}\n"
        f"üéí <b>–ë–∞–≥–∞–∂:</b> {characteristics.luggage}\n"
        f"üìú <b>–§–∞–∫—Ç:</b> {characteristics.facts}\n"
        f"üò± <b>–§–æ–±–∏—è:</b> {characteristics.phobia}\n"
        f"‚ú® <b>–¢–∞–ª–∞–Ω—Ç:</b> {characteristics.talent}\n"
        f"üè∑Ô∏è <b>–°–æ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:</b> {characteristics.social_status}"
    )

def _get_achievements_text(player_achievements: List[PlayerAchievement]) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏–≥—Ä–æ–∫–∞."""
    if not player_achievements:
        return "üéñÔ∏è –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. –ü–µ—Ä–≤–∞—è –ø–æ–±–µ–¥–∞ —É–∂–µ –±–ª–∏–∑–∫–æ!"

    achievement_lines = []
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏—è
    for pa in sorted(player_achievements, key=lambda x: x.date_achieved):
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ Achievement
        achievement = pa.achievement
        achievement_lines.append(f"üèÖ <b>{achievement.name}</b>: <i>{achievement.description}</i>")
    
    return "<b>–í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>\n\n" + "\n\n".join(achievement_lines)


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---

@player_in_room_required
def handle_show_status(bot: TeleBot, message: Message, session: Session, player: Player, room: Room):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /show_status.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–≥—Ä–æ–∫—É –µ–≥–æ —Ç–µ–∫—É—â–∏–µ –∏–≥—Ä–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.
    """
    logging.info(f"–ò–≥—Ä–æ–∫ {player.username} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–≤–æ–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≤ –∫–æ–º–Ω–∞—Ç–µ {room.code}.")
    
    char_text = _get_player_characteristics_text(player)
    bot.send_message(player.telegram_id, char_text, parse_mode='HTML')


@player_in_room_required
def handle_leave_room(bot: TeleBot, message: Message, session: Session, player: Player, room: Room):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /leave_room.
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–≥—Ä–æ–∫—É –ø–æ–∫–∏–Ω—É—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–º–Ω–∞—Ç—É.
    """
    logging.info(f"–ò–≥—Ä–æ–∫ {player.username} –ø–æ–∫–∏–¥–∞–µ—Ç –∫–æ–º–Ω–∞—Ç—É {room.code}.")

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
    notification_text = f"üë§ –ò–≥—Ä–æ–∫ <b>{player.username}</b> –ø–æ–∫–∏–Ω—É–ª –∫–æ–º–Ω–∞—Ç—É."
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Å–ø–∏—Å–∫–∞, —Ç–∞–∫ –∫–∞–∫ –∏–≥—Ä–æ–∫ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ
    other_players = [p for p in room.players if p.id != player.id]
    
    for p in other_players:
        try:
            bot.send_message(p.telegram_id, notification_text, parse_mode='HTML')
        except APIError as e:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∏–≥—Ä–æ–∫–∞ {p.id} –æ –≤—ã—Ö–æ–¥–µ {player.id}: {e}")

    # –£–±–∏—Ä–∞–µ–º –∏–≥—Ä–æ–∫–∞ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã
    player.current_room_id = None
    
    # –î–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å–∞–º —Å–¥–µ–ª–∞–µ—Ç commit
    bot.send_message(message.chat.id, "üö™ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–Ω—É–ª–∏ –∫–æ–º–Ω–∞—Ç—É.")


@player_required
def handle_rating(bot: TeleBot, message: Message, session: Session, player: Player):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /rating.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–±–µ–¥ –∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–π –∏–≥—Ä–æ–∫–∞.
    """
    logging.info(f"–ò–≥—Ä–æ–∫ {player.username} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥.")
    
    rating_text = (
        f"<b>üìä –í–∞—à —Ä–µ–π—Ç–∏–Ω–≥:</b>\n\n"
        f"üèÜ <b>–ü–æ–±–µ–¥:</b> {player.wins}\n"
        f"üíÄ <b>–ü–æ—Ä–∞–∂–µ–Ω–∏–π:</b> {player.losses}"
    )
    bot.send_message(message.chat.id, rating_text, parse_mode='HTML')


@player_required
def handle_achievements(bot: TeleBot, message: Message, session: Session, player: Player):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /achievements.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–æ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.
    """
    logging.info(f"–ò–≥—Ä–æ–∫ {player.username} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º joinedload –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ–± –∞—á–∏–≤–∫–∞—Ö
    player_with_achievements = session.query(Player).options(
        joinedload(Player.achievements).joinedload(PlayerAchievement.achievement)
    ).filter(Player.id == player.id).one()

    achievements_text = _get_achievements_text(player_with_achievements.achievements)
    bot.send_message(message.chat.id, achievements_text, parse_mode='HTML')