# handlers/join_room_handler.py

import logging
from telebot import TeleBot
from telebot.types import Message

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞
from handlers.create_room_handler import player_required
from models import Player, Room
from sqlalchemy.orm import Session

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã ---

@player_required
def handle_join_room(bot: TeleBot, message: Message, session: Session, player: Player):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /join_room.
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–≥—Ä–æ–∫—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–Ω–∞—Ç–µ –ø–æ –∫–æ–¥—É.
    """
    logging.info(f"–ò–≥—Ä–æ–∫ {player.username} ({player.id}) –ø—ã—Ç–∞–µ—Ç—Å—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ.")

    if player.current_room_id:
        bot.send_message(message.chat.id, "‚ùó –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ–º–Ω–∞—Ç–µ. –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∏–Ω—å—Ç–µ –µ–µ —Å –ø–æ–º–æ—â—å—é /leave_room.")
        return

    try:
        room_code = message.text.split()[1]
    except IndexError:
        bot.send_message(message.chat.id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: /join_room ABC123")
        return

    # –ò—â–µ–º –∫–æ–º–Ω–∞—Ç—É –ø–æ –∫–æ–¥—É
    room = session.query(Room).filter_by(code=room_code).first()

    # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —É—Å–ª–æ–≤–∏—è
    if not room:
        bot.send_message(message.chat.id, f"‚ùó –ö–æ–º–Ω–∞—Ç–∞ —Å –∫–æ–¥–æ–º <code>{room_code}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", parse_mode='HTML')
        return

    if not room.is_active:
        bot.send_message(message.chat.id, "‚ùó –≠—Ç–∞ –∏–≥—Ä–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–µ–ª—å–∑—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è.")
        return

    if len(room.players) >= room.max_players:
        bot.send_message(message.chat.id, "‚ùó –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–∞ –∫–æ–º–Ω–∞—Ç–∞ —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞.")
        return

    # –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
    player.room = room  # SQLAlchemy –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç player.current_room_id
    
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –≤ –∫–æ–º–Ω–∞—Ç–µ –æ –Ω–æ–≤–æ–º –∏–≥—Ä–æ–∫–µ
    notification_text = f"üë§ –ò–≥—Ä–æ–∫ <b>{player.username}</b> –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ!"
    for p in room.players:
        if p.id != player.id:
            try:
                bot.send_message(p.telegram_id, notification_text, parse_mode='HTML')
            except Exception as e: # <-- –ó–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ –æ–±—â–µ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
                logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∏–≥—Ä–æ–∫–∞ {p.id} –æ –≤—Ö–æ–¥–µ {player.id}: {e}")

    bot.send_message(message.chat.id, f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–Ω–∞—Ç–µ <code>{room_code}</code>!", parse_mode='HTML')
    logging.info(f"–ò–≥—Ä–æ–∫ {player.username} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ {room.code}.")
    # –î–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å–∞–º –≤—ã–ø–æ–ª–Ω–∏—Ç session.commit()