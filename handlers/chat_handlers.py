# handlers/chat_handlers.py

from database import Session
from models import Player, Room, Message
import logging

def get_player(session, telegram_id):
    return session.query(Player).filter_by(telegram_id=telegram_id).first()

def handle_send_message(bot, message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /msg")
    session = Session()
    try:
        player = get_player(session, message.from_user.id)
        if not player or not player.current_room_id:
            bot.send_message(message.chat.id, "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∏–≥—Ä–µ.")
            return

        room = session.query(Room).filter_by(id=player.current_room_id).first()
        text = message.text.partition(' ')[2]
        if not text:
            bot.send_message(message.chat.id, "‚ùó –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.")
            return

        new_message = Message(
            room_id=room.id,
            sender_id=player.id,
            content=text
        )
        session.add(new_message)
        session.commit()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º –≤ –∫–æ–º–Ω–∞—Ç–µ
        for p in room.players:
            if p.id != player.id:
                bot.send_message(p.telegram_id, f"üí¨ <b>{player.username}:</b> {text}", parse_mode='HTML')
        bot.send_message(message.chat.id, "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º –≤ –∫–æ–º–Ω–∞—Ç–µ.")
    except Exception as e:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_send_message: {e}")
    finally:
        session.close()

def handle_send_private_message(bot, message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /pm")
    session = Session()
    try:
        player = get_player(session, message.from_user.id)
        if not player or not player.current_room_id:
            bot.send_message(message.chat.id, "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∏–≥—Ä–µ.")
            return

        args = message.text.split(' ', 2)
        if len(args) < 3:
            bot.send_message(message.chat.id, "‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /pm [username] [—Å–æ–æ–±—â–µ–Ω–∏–µ]")
            return

        recipient_username = args[1]
        text = args[2]

        recipient = session.query(Player).filter_by(username=recipient_username).first()
        if not recipient or recipient.current_room_id != player.current_room_id:
            bot.send_message(message.chat.id, "‚ùó –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ.")
            return

        new_message = Message(
            room_id=player.current_room_id,
            sender_id=player.id,
            recipient_id=recipient.id,
            content=text
        )
        session.add(new_message)
        session.commit()

        bot.send_message(recipient.telegram_id, f"üîí <b>–ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {player.username}:</b> {text}", parse_mode='HTML')
        bot.send_message(message.chat.id, "‚úÖ –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_send_private_message: {e}")
    finally:
        session.close()
